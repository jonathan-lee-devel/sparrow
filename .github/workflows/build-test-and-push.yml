name: 'Build, Test, and Push'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  build-and-push-api:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x]
        scope: [services/api]
    name: Build ${{ matrix.scope }} using Node v${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - run: cd ${{ matrix.scope }} && yarn install
      - run: cd ${{ matrix.scope }} && yarn run build
      - run: cd ${{ matrix.scope }} && yarn run test
      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./${{ matrix.scope }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: ${{ matrix.scope }} B&P
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:./services/api/"
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sparrow-express-api:${{ steps.package-version.outputs.current-version}}

  build-and-push-ui-staging:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [ 20.x ]
        scope: [ services/ui ]
    name: Build ${{ matrix.scope }} using Node v${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - run: cd ${{ matrix.scope }} && yarn install
      - run: cd ${{ matrix.scope }} && yarn run build:stage
      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./${{ matrix.scope }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: ${{ matrix.scope }} B&P
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:./services/ui/"
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sparrow-express-ui:${{ steps.package-version.outputs.current-version}}

  build-and-push-ui-production:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [ 20.x ]
        scope: [ services/ui ]
    name: Build ${{ matrix.scope }} using Node v${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - run: cd ${{ matrix.scope }} && yarn install
      - run: cd ${{ matrix.scope }} && yarn run build:prod
      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: ./${{ matrix.scope }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: ${{ matrix.scope }} B&P
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:./services/ui/"
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sparrow-express-ui:${{ steps.package-version.outputs.current-version}}
